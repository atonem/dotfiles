# change prefix to backtick
unbind C-b
set-option -g prefix §
bind § send-prefix
#"$(python3 -m site --user-site)"

# User powerline status bar
run-shell "powerline-daemon -q"
run-shell 'tmux source-file "$(python3 -m site --user-site)/powerline/bindings/tmux/powerline.conf"'

# shell
set -g default-command /usr/local/bin/zsh
set -g default-shell /usr/local/bin/zsh

# start with window 1 (instead of 0)
set -g base-index 1
# renumber windows after closing
set -g renumber-windows on

# start with pane 1
set -g pane-base-index 1

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal "xterm-256color"

# source config file
bind r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded."

# history
set -g history-limit 4096

# allow terminal scrolling
set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'

# vim style copy paste mode
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# use vi mode
setw -g mode-keys vi
set -g status-keys vi

# pleb mode
#set -g mouse on

# Create splits and vertical splits
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\"  "select-pane -l"

bind -n S-j resize-pane -D 2
bind -n S-k resize-pane -U 2
bind -n S-h resize-pane -L 2
bind -n S-l resize-pane -R 2

# colon :
bind : command-prompt

#resizing
setw -g aggressive-resize on

# window status
#set-option -g status-position bottom

# color scheme (styled as vim-powerline)
#set -g status-left-length 52
#set -g status-right-length 451
#set -g status-fg white
#set -g status-bg colour234
#set -g pane-border-fg colour245
#set -g pane-active-border-fg colour39
#set -g message-fg colour16
#set -g message-bg colour221
#set -g message-attr bold
#set -g status-left '#[fg=colour235,bg=colour252,bold] ❐ #S #[fg=colour252,bg=colour238,nobold]⮀#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]⮀'
#set -g window-status-format '#[fg=colour235,bg=colour252,bold] #I #(pwd="#{pane_current_path}"; echo ${pwd####*/}) #W '
#set -g window-status-current-format '#[fg=colour234,bg=colour39]⮀#[fg=black,bg=colour39,noreverse,bold] #{?window_zoomed_flag,#[fg=colour228],} #I #(pwd="#{pane_current_path}"; echo ${pwd####*/}) #W #[fg=colour39,bg=colour234,nobold]⮀'
#set-option -g status-interval 2

# loud or quiet?
set-option -g visual-activity on
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

# tmux clock
set -g clock-mode-colour colour101

# some key-binding changes
bind x kill-pane
bind X next-layout
bind Z previous-layout
bind t set status

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# Patch for OS X pbpaste and pbcopy under tmux.
set-option -g default-command "which reattach-to-user-namespace > /dev/null && reattach-to-user-namespace -l $SHELL || $SHELL"

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"

# Fix key bindings broken in tmux 2.1
set -g assume-paste-time 0

# Fix escape delay
set -sg escape-time 0

